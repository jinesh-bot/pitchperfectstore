<%- include("./partials/loginheader.ejs") %>

<div style="background-image: url('football.jpg');" class="items-center justify-center h-screen bg-cover flex bg-center">
    <div class="text-center text-white w-full px-4 md:px-0">
        <div class="bg-black bg-opacity-50 rounded-xl p-4 md:p-8 mx-auto max-w-[90%] md:max-w-xl">
            <div class="mb-4 md:mb-8">
                <p class="text-4xl md:text-7xl italic font-sans font-bold text-[#DCFCE7]">Prime Pitch</p>
                <p class="text-base md:text-lg font-semibold mt-2 text-[#DCFCE7]">Reset Password</p>
            </div>

            <!-- Email Form -->
            <form id="forgotPasswordForm" class="flex flex-col items-center space-y-4">
                <div class="w-full md:w-96">
                    <input type="email" 
                           id="email" 
                           name="email"
                           placeholder="Enter your email"
                           class="w-full bg-black bg-opacity-50 rounded-md placeholder-gray-300 px-4 py-2.5 text-base md:text-lg text-white">
                </div>

                <div id="message" class="hidden w-full md:w-96">
                    <div class="rounded-md p-4"></div>
                </div>

                <button type="submit" 
                        class="mt-4 bg-[#DCFCE7] text-black font-bold text-base px-6 md:px-8 py-2 rounded-full w-full md:w-auto hover:bg-white transition-colors">
                    Send Reset Link
                </button>

                <div class="mt-4">
                    <a href="/login" 
                       class="text-[#DCFCE7] hover:text-white text-sm transition-colors">
                        Back to Login
                    </a>
                </div>
            </form>

            <!-- OTP Form (Initially Hidden) -->
            <form id="otpForm" class="hidden flex flex-col items-center space-y-4">
                <div class="text-center mb-4">
                    <p class="text-base text-gray-300">Enter the OTP sent to your email</p>
                    <div class="mt-2">
                        <span class="text-sm text-gray-400">Time remaining: </span>
                        <span id="timer" class="text-sm font-semibold text-red-500">02:00</span>
                    </div>
                </div>

                <div class="flex justify-center space-x-2">
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl bg-black bg-opacity-50 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-[#DCFCE7]">
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl bg-black bg-opacity-50 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-[#DCFCE7]">
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl bg-black bg-opacity-50 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-[#DCFCE7]">
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl bg-black bg-opacity-50 text-white border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-[#DCFCE7]">
                </div>

                <div id="otpMessage" class="hidden w-full md:w-96">
                    <div class="rounded-md p-4"></div>
                </div>

                <div class="flex justify-between items-center w-full md:w-96">
                    <button type="button" 
                            onclick="resendOTP()"
                            class="text-[#DCFCE7] hover:text-white text-sm transition-colors">
                        Resend OTP
                    </button>
                    <button type="submit"
                            class="bg-[#DCFCE7] text-black font-bold text-base px-6 py-2 rounded-full hover:bg-white transition-colors">
                        Verify OTP
                    </button>
                </div>
            </form>

            <!-- Password Reset Form (Initially Hidden) -->
            <form id="resetPasswordForm" class="hidden flex flex-col items-center space-y-4">
                <div class="relative w-full md:w-96">
                    <input type="password" 
                           id="newPassword" 
                           placeholder="New Password"
                           class="w-full bg-black bg-opacity-50 rounded-md placeholder-gray-300 px-4 py-2.5 text-base md:text-lg text-white pr-10">
                    <button type="button"
                            onclick="togglePasswordVisibility('newPassword')"
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-300 hover:text-white">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
                <div id="passwordStrength" class="text-xs text-gray-300 w-full md:w-96 text-left"></div>

                <div class="relative w-full md:w-96">
                    <input type="password" 
                           id="confirmPassword" 
                           placeholder="Confirm Password"
                           class="w-full bg-black bg-opacity-50 rounded-md placeholder-gray-300 px-4 py-2.5 text-base md:text-lg text-white pr-10">
                    <button type="button"
                            onclick="togglePasswordVisibility('confirmPassword')"
                            class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-300 hover:text-white">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>

                <div id="resetPasswordMessage" class="hidden w-full md:w-96">
                    <div class="rounded-md p-4"></div>
                </div>

                <button type="submit"
                        class="mt-4 bg-[#DCFCE7] text-black font-bold text-base px-6 md:px-8 py-2 rounded-full w-full md:w-auto hover:bg-white transition-colors">
                    Reset Password
                </button>
            </form>
        </div>
    </div>
</div>

<script>
    const form = document.getElementById('forgotPasswordForm');
    const otpForm = document.getElementById('otpForm');
    const resetPasswordForm = document.getElementById('resetPasswordForm');
    const message = document.getElementById('message');
    const messageContent = message.querySelector('div');
    const otpInputs = otpForm.querySelectorAll('input');
    let timerInterval;

    // Handle OTP input behavior
    otpInputs.forEach((input, index) => {
        input.addEventListener('keyup', (e) => {
            if (e.key !== 'Backspace' && input.value) {
                const next = otpInputs[index + 1];
                if (next) next.focus();
            }
        });

        input.addEventListener('keydown', (e) => {
            if (e.key === 'Backspace' && !input.value) {
                const prev = otpInputs[index - 1];
                if (prev) prev.focus();
            }
        });
    });

    function startTimer(duration) {
        clearInterval(timerInterval);
        let timer = duration;
        const timerDisplay = document.getElementById('timer');
        
        timerInterval = setInterval(() => {
            const minutes = parseInt(timer / 60, 10);
            const seconds = parseInt(timer % 60, 10);

            const displayMinutes = minutes < 10 ? "0" + minutes : minutes;
            const displaySeconds = seconds < 10 ? "0" + seconds : seconds;

            timerDisplay.textContent = displayMinutes + ":" + displaySeconds;

            if (--timer < 0) {
                clearInterval(timerInterval);
                showError('OTP has expired. Please request a new one.');
                form.classList.remove('hidden');
                otpForm.classList.add('hidden');
                otpInputs.forEach(input => input.value = '');
            }
        }, 1000);
    }

    // Handle email form submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const email = document.getElementById('email').value.trim();

        try {
            const response = await fetch('/forgot-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email })
            });

            const data = await response.json();
            message.classList.remove('hidden');

            if (data.success) {
                messageContent.className = 'rounded-md p-4 bg-green-100 text-green-700 flex items-center';
                messageContent.innerHTML = `
                    <i class="fas fa-check-circle mr-2"></i>
                    <span>${data.message}</span>
                `;
                form.classList.add('hidden');
                otpForm.classList.remove('hidden');
                otpInputs[0].focus();
                startTimer(120); // 2 minutes
            } else {
                messageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
                messageContent.innerHTML = `
                    <i class="fas fa-exclamation-circle mr-2"></i>
                    <span>${data.error}</span>
                `;
            }
        } catch (error) {
            showError('An error occurred. Please try again.');
        }
    });

    // Handle OTP form submission
    otpForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const otp = Array.from(otpInputs).map(input => input.value).join('');
        const email = document.getElementById('email').value.trim();

        try {
            const response = await fetch('/verify-forgot-password-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email, otp })
            });

            const data = await response.json();
            const otpMessage = document.getElementById('otpMessage');
            const otpMessageContent = otpMessage.querySelector('div');
            otpMessage.classList.remove('hidden');

            if (data.success) {
                clearInterval(timerInterval);
                otpForm.classList.add('hidden');
                resetPasswordForm.classList.remove('hidden');
                document.getElementById('newPassword').focus();
            } else {
                otpMessageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
                otpMessageContent.innerHTML = `
                    <i class="fas fa-exclamation-circle mr-2"></i>
                    <span>${data.error}</span>
                `;
            }
        } catch (error) {
            showError('An error occurred. Please try again.');
        }
    });

    // Handle password reset form
    resetPasswordForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        const email = document.getElementById('email').value.trim();
        const messageDiv = document.getElementById('resetPasswordMessage');
        const messageContent = messageDiv.querySelector('div');

        if (!validatePassword(newPassword)) {
            messageDiv.classList.remove('hidden');
            messageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
            messageContent.innerHTML = `
                <i class="fas fa-exclamation-circle mr-2"></i>
                <span>Password must be at least 8 characters long and contain uppercase, lowercase, numbers, and special characters</span>
            `;
            return;
        }

        if (newPassword !== confirmPassword) {
            messageDiv.classList.remove('hidden');
            messageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
            messageContent.innerHTML = `
                <i class="fas fa-exclamation-circle mr-2"></i>
                <span>Passwords do not match</span>
            `;
            return;
        }

        try {
            const response = await fetch('/reset-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email, password: newPassword })
            });

            const data = await response.json();
            messageDiv.classList.remove('hidden');

            if (data.success) {
                messageContent.className = 'rounded-md p-4 bg-green-100 text-green-700 flex items-center';
                messageContent.innerHTML = `
                    <i class="fas fa-check-circle mr-2"></i>
                    <span>Password reset successful! Redirecting to login...</span>
                `;
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
            } else {
                messageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
                messageContent.innerHTML = `
                    <i class="fas fa-exclamation-circle mr-2"></i>
                    <span>${data.error}</span>
                `;
            }
        } catch (error) {
            showError('An error occurred. Please try again.');
        }
    });

    // Resend OTP function
    async function resendOTP() {
        const email = document.getElementById('email').value.trim();
        try {
            const response = await fetch('/resend-forgot-password-otp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email })
            });

            const data = await response.json();
            const otpMessage = document.getElementById('otpMessage');
            const otpMessageContent = otpMessage.querySelector('div');
            otpMessage.classList.remove('hidden');

            if (data.success) {
                otpMessageContent.className = 'rounded-md p-4 bg-green-100 text-green-700 flex items-center';
                otpMessageContent.innerHTML = `
                    <i class="fas fa-check-circle mr-2"></i>
                    <span>New OTP sent successfully!</span>
                `;
                startTimer(120);
                otpInputs.forEach(input => input.value = '');
                otpInputs[0].focus();
            } else {
                otpMessageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
                otpMessageContent.innerHTML = `
                    <i class="fas fa-exclamation-circle mr-2"></i>
                    <span>${data.error}</span>
                `;
            }
        } catch (error) {
            showError('An error occurred. Please try again.');
        }
    }

    function validatePassword(password) {
        const minLength = 8;
        const hasUpperCase = /[A-Z]/.test(password);
        const hasLowerCase = /[a-z]/.test(password);
        const hasNumbers = /\d/.test(password);
        const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);

        const strengthDiv = document.getElementById('passwordStrength');
        let strength = 0;
        let message = '';

        if (password.length >= minLength) strength++;
        if (hasUpperCase && hasLowerCase) strength++;
        if (hasNumbers) strength++;
        if (hasSpecialChar) strength++;

        switch(strength) {
            case 0:
                message = '<span class="text-red-500">Very Weak</span>';
                break;
            case 1:
                message = '<span class="text-orange-500">Weak</span>';
                break;
            case 2:
                message = '<span class="text-yellow-500">Medium</span>';
                break;
            case 3:
                message = '<span class="text-blue-500">Strong</span>';
                break;
            case 4:
                message = '<span class="text-green-500">Very Strong</span>';
                break;
        }

        strengthDiv.innerHTML = `Password Strength: ${message}`;
        return strength >= 3;
    }

    function togglePasswordVisibility(inputId) {
        const input = document.getElementById(inputId);
        const icon = input.nextElementSibling.querySelector('i');
        
        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            input.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }

    function showError(message) {
        const messageDiv = document.getElementById('message');
        const messageContent = messageDiv.querySelector('div');
        messageDiv.classList.remove('hidden');
        messageContent.className = 'rounded-md p-4 bg-red-100 text-red-700 flex items-center';
        messageContent.innerHTML = `
            <i class="fas fa-exclamation-circle mr-2"></i>
            <span>${message}</span>
        `;
    }

    // Clean up timer when page is unloaded
    window.addEventListener('beforeunload', () => {
        clearInterval(timerInterval);
    });
</script>

<%- include("./partials/loginfooter.ejs") %> 